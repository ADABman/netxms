/* 
** NetXMS - Network Management System
** Copyright (C) 2003-2011 Victor Kirhenshtein
**
** Driver for Avaya stackable ethernet switches
** (former Nortel ERS, former Bay Networks BayStack)
**
** This program is free software; you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation; either version 2 of the License, or
** (at your option) any later version.
**
** This program is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
**
** You should have received a copy of the GNU General Public License
** along with this program; if not, write to the Free Software
** Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
**
**/

/**
 * Check if given device is supported by driver
 *
 * @param oid Device OID
 */
sub isDeviceSupported(oid)
{
	return substr(oid, 1, 17) == ".1.3.6.1.4.1.45.3";
}

/**
 * Do additional checks on the device required by driver.
 * Driver can set device's custom attributes from within
 * this function.
 */
sub analyzeDevice(snmp)
{
	// Calculate slot size
	if (substr($node->snmpOID, 1, 20) == ".1.3.6.1.4.1.45.3.74")
	{
		slotSize = 128;
	}
	else if (substr($node->snmpOID, 1, 20) == ".1.3.6.1.4.1.45.3.40")
	{
		slotSize = 32;
	}
	else
	{
		slotSize = 64;
	}
	SetCustomAttribute($node, ".baystack.slotSize", slotSize);

	// Check if device supports rapidCity VLAN MIBs
	if (SnmpGet(snmp, ".1.3.6.1.4.1.2272.1.3.1.0") != null)
		SetCustomAttribute($node, ".baystack.rapidCity.vlan", true);
	else
		SetCustomAttribute($node, ".baystack.rapidCity.vlan", false);
}

/**
 * Update standard interface list with vendor-specific data
 *
 * @param snmp SNMP transport
 * @param iflist Interface list to be updated
 */
sub getInterfaces(snmp, iflist)
{
	// Calculate slot and port number
	slotSize = GetCustomAttribute($node, ".baystack.slotSize");
	for(i = 0; iflist[i] != null; i++)
	{
		slot = iflist[i]->index / slotSize + 1;
		if ((slot > 0) & (slot <= 8))
		{
			iflist[i]->slot = slot;
			iflist[i]->port = iflist[i].index % slotSize;
		}
	}
	
	// Get VLAN interfaces
	if (GetCustomAttribute($node, ".baystack.rapidCity.vlan"))
	{
		SnmpGetTable(snmp, ".1.3.6.1.4.1.2272.1.3.2.1.16", ".1.3.6.1.4.1.2272.1.3.2.1.17", ".1.3.6.1.4.1.2272.1.3.2.1.19");
	}
}

/**
 * Get VLANs. Should return null if device is not aware of VLANs.
 *
 * @param snmp SNMP transport
 */
sub getVlans(snmp)
{
	return null;
}
