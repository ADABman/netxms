#!/bin/bash
#
# Start binary with address sanitizer
# Copyright (c) 2020 Raden Solutions
#
# Usage: nx-run-asan-binary [-ndd] binary [arguments]
#

if [ "x$NETXMS_HOME" != "x" ]; then
	BINDIR="$NETXMS_HOME/bin"
	DATADIR="$NETXMS_HOME/share/netxms"
	PKGLIBDIR="$NETXMS_HOME/lib/netxms"
	SYSCONFDIR="$NETXMS_HOME/etc"
else
	BINDIR="~BINDIR~"
	DATADIR="~DATADIR~"
	PKGLIBDIR="~PKGLIBDIR~"
	SYSCONFDIR="~SYSCONFDIR~"
fi

if [ "$1" == "-ndd" ]; then
	shift
	NDDS=`ls $PKGLIBDIR/ndd/*.ndd -1 | xargs`
fi

BINARY="$BINDIR/$1"
LIBASAN=`ldd $BINARY | grep libasan | cut -d '>' -f 2 | cut -d '(' -f 1 | xargs`
if [ "x$LIBASAN" == "x" ]; then
	echo "*** $BINARY was built without address sanitizer support"
	exit 1
fi
LD_PRELOAD="$LIBASAN"

ASAN_OPTIONS="detect_odr_violation=1${ASAN_OPTIONS:+:}${ASAN_OPTIONS}"

# Remove binary name from argument list
shift

# Check for config specified with -c
CONFIG=`getopt -q -- c: "$@" | sed -e 's,--.*,,' | cut -d "'" -f 2 | xargs`
if [ "x$CONFIG" == "x" ]; then
	CONFIG="$SYSCONFDIR/netxmsd.conf"
	if [ ! -f "$CONFIG" ]; then
		CONFIG="/etc/netxmsd.conf"
	fi
fi

if [ -f "$CONFIG" ]; then
	echo "*** Using configuration file $CONFIG"

	DRIVERS=`cat $CONFIG | grep -v '#' | grep DBDriver | cut -d '=' -f 2 | xargs`
	for DRIVER in $DRIVERS; do
		LD_PRELOAD="$LD_PRELOAD:$PKGLIBDIR/dbdrv/$DRIVER"
	done

	MODULES=`cat $CONFIG | grep -v '#' | grep Module | cut -d '=' -f 2 | xargs`
	for MODULE in $MODULES; do
		MODULE=`echo $MODULE | cut -d ',' -f 1`
		LD_PRELOAD="$LD_PRELOAD:$PKGLIBDIR/$MODULE"
	done

	for NDD in $NDDS; do
		LD_PRELOAD="$LD_PRELOAD:$NDD"
	done
fi

LSAN_SUPPRESSIONS_FILE="$DATADIR/lsan-suppressions.txt"
if [ -f "$LSAN_SUPPRESSIONS_FILE" ]; then
	echo "*** Using suppressions file $LSAN_SUPPRESSIONS_FILE"
	LSAN_OPTIONS="suppressions=$LSAN_SUPPRESSIONS_FILE"
	export LSAN_OPTIONS
fi

echo "*** Starting $BINARY"
echo "*** Options: $ASAN_OPTIONS"
echo "*** $LD_PRELOAD"

export ASAN_OPTIONS
export LD_PRELOAD
$BINARY "$@"
exit $?
