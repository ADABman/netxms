 Current NetXMS ToDo List
**************************


GENERAL:

- Fix bugs in ConditionWait()
- Finish Linux subagent
- FreeBSD subagent
- Solaris subagent
- AIX subagent
- HP-UX subagent
- Performance subagent for Windows (winperf)
- Cross-platform pinger subagent
- Change configure script to allow selection of components to build
- Write README for NetWare
- SMS-sender interface with drivers for cell-phones/SMPP
- Add check for read/write locks support to configure script
- Implement daemon() function for platforms without it
- Add new data types for data collection: unsigned integer 32 bits
  and unsigned integer 64 bits
- Allow converting counters to deltas in data collection
- Add ability to clear collected DCI data
- Add ability to send Wake-On-LAN packets to managed nodes


SERVER:

- Recalculate object status after binding change
- Add internal stats collection:
	1. Average data collector queue length
	2. Average database writer queue length
- Implement sending of all alarms from database
- Add signal handlers for UNIX
- Implement normal mailer shutdown
- Implement locks table in memory
- Check if object indexes always locked when used
- Remove system-dependent code for getting interface list and ARP cache
  from management server. Server should rely on SNMP or native agent for
  this functionality.
- Change node into subnet placement algorithm
- Add incorect netmask detection
- Chech if ObjectGlobalLock()/ObjectGlobalUnlock() really needed or we can
  use just index locking


CORE AGENT:

- Check shutdown procedure on different platforms
- Add signal handlers for UNIX


WINDOWS CONSOLE:

- Add custom background erasing code in policy editor for smooth painting
- Add support for "View -> Refresh" in data collection configurator
  (or, even better, automatic update)
- Automatically select data type in DCI configuration dialog based on
  selected parameter
- Add parameter selection for native agents in DCI configuration dialog
- Find good graph creation library


SUBAGENTS:

- libperl-driven subagent, allow to run perl scripts w/o forking/executing
- bandwidth meter; data in/out for last N seconds
