 Current NetXMS ToDo List
**************************


GENERAL:

- Fix bugs in ConditionWait()
- Finish Linux subagent
- FreeBSD subagent
- Solaris subagent
- AIX subagent
- HP-UX subagent
- Cross-platform pinger subagent
- Write README for NetWare
- SMS-sender interface with drivers for cell-phones/SMPP
- Add check for read/write locks support to configure script
- Implement daemon() function for platforms without it
- Allow converting counters to deltas in data collection
- Add ability to clear collected DCI data
- Add possibility to set different polling timeouts for different nodes
- Add --with-client option to configure (should enable libnxcl and nxevent)
- Optimize WaitForMessage method in message waiting queue class
- Rewrite event management in a way to eliminate the need to unlock
  event configuration to allow sending of new events


SERVER:

- Recalculate object status after binding change
- Implement sending of all alarms from database
- Implement normal mailer shutdown
- Check if object indexes always locked when used
- Remove system-dependent code for getting interface list and ARP cache
  from management server. Server should rely on SNMP or native agent for
  this functionality.
- Chech if ObjectGlobalLock()/ObjectGlobalUnlock() really needed or we can
  use just index locking
- Check what happens if DCI copied while being polled
- On startup, server must read last poll time from database for each DCI
- Optimize SNMP subsystem


CORE AGENT:

- Check shutdown procedure on different platforms
- Add signal handlers for UNIX


LINUX AGENT:

- Return correct interface type in Net.InterfaceList


WINDOWS CONSOLE:

- Automatically select data type in DCI configuration dialog based on
  selected parameter
- Add parameter selection for native agents in DCI configuration dialog
- Find good graph creation library
- In object browser, automatically enclose search string in * when searching
- Enlarge 16x16 status overlay icons
- Add primary IP address selection 


SUBAGENTS:

- libperl-driven subagent, allow to run perl scripts w/o forking/executing
- bandwidth meter; data in/out for last N seconds
